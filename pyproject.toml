[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
(
  /(
    | \.git
    | \.env
    | \.venv
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120


[tool.pylint]
    [tool.pylint.master]
    disable=['R0914', 'C2001', 'R0801']
    ignore = ['CVS', 'alembic', '.venv']
    jobs = 1
    persistent = ['yes']
    unsafe-load-any-extension=['no']
    max-complexity = 7
    max-try-statements = 4
    suggestion-mode = ['yes']
    load-plugins = [
        "pylint.extensions.mccabe",
        "pylint.extensions.bad_builtin",
        "pylint.extensions.check_elif",
        "pylint.extensions.broad_try_clause",
        "pylint.extensions.redefined_variable_type",
        "pylint.extensions.overlapping_exceptions",
        "pylint.extensions.comparetozero",
        "pylint.extensions.emptystring"
    ]

    [tool.pylint.'MESSAGES CONTROL']
    disable = [
        "logging-fstring-interpolation", # for f-string logs
        "import-error",
        "no-name-in-module",
        "missing-module-docstring",
        "missing-class-docstring",
        "missing-function-docstring",
        "too-few-public-methods",
        "fixme",
        "unexpected-keyword-arg",  # https://github.com/PyCQA/pylint/issues/6550
    ]

    enable = 'c-extension-no-member'

    [tool.pylint.'REPORTS']
    evaluation = '10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)'
    output-format = 'parseable'
    reports = 'no'
    score = 'yes'

    [tool.pylint.'REFACTORING']
    max-nested-blocks = 5
    never-returning-functions = ['optparse.Values','sys.exit']

    [tool.pylint.'LOGGING']
    logging-modules = 'logging'
    logging-format-style = 'new'

    [tool.pylint.'SPELLING']
    max-spelling-suggestions = 4
    spelling-store-unknown-words = 'no'

    [tool.pylint.'MISCELLANEOUS']
    notes = ['FIXME,XXX,TODO']

    [tool.pylint.'TYPECHECK']
    contextmanager-decorators = ['contextlib.contextmanager']
    ignore-mixin-members = 'yes'
    ignore-on-opaque-inference = 'yes'
    ignored-classes = 'optparse.Values,thread._local,_thread._local'
    ignored-modules = 'asyncio'
    missing-member-hint = 'yes'
    missing-member-hint-distance = 1
    missing-member-max-choices = 1
    allow-global-unused-variables = 'yes'
    callbacks = ['cb_', '_cb']
    dummy-variables-rgx = '_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_'
    ignored-argument-names = '_.*|^ignored_|^unused_'
    init-import = 'no'
    redefining-builtins-modules = ['six.moves', 'past.builtins', 'future.builtins', 'io']

    [tool.pylint.'FORMAT']
    ignore-long-lines = '^\s*(# )?<?https?://\S+>?$'
    indent-after-paren = 4
    max-line-length=120
    max-module-lines=600
    single-line-class-stmt = 'no'
    single-line-if-stmt = 'no'

    [tool.pylint.'SIMILARITIES']
    ignore-comments = 'yes'
    ignore-docstrings = 'yes'
    ignore-imports = 'yes'
    min-similarity-lines = 4

    [tool.pylint.'BASIC']
    argument-naming-style = 'snake_case'
    attr-naming-style = 'snake_case'
    bad-names=['foo', 'bar', 'baz', 'toto', 'tutu', 'tata']
    class-attribute-naming-style = 'any'
    class-naming-style = 'PascalCase'
    const-naming-style = 'UPPER_CASE'
    docstring-min-length = -1
    function-naming-style = 'snake_case'
    good-names=['i', 'j', 'k', 'x', 'ex', 'Run', '_', 'ts', 'db', 'f', 'env']
    include-naming-hint = 'yes'
    inlinevar-naming-style = 'any'
    method-naming-style = 'snake_case'
    module-naming-style = 'snake_case'
    no-docstring-rgx = '^_'
    property-classes = 'abc.abstractproperty'
    variable-naming-style = 'snake_case'

    [tool.pylint.'IMPORTS']
    allow-wildcard-with-all = 'no'
    analyse-fallback-blocks = 'no'
    deprecated-modules = ['optparse', 'tkinter.tix']
    known-third-party = 'enchant'

    [tool.pylint.'CLASSES']
    defining-attr-methods = ['__init__', '__new__', 'setUp']
    exclude-protected = ['_asdict', '_fields', '_replace', '_source', '_make']
    valid-classmethod-first-arg = 'cls'
    valid-metaclass-classmethod-first-arg = 'mcs'

    [tool.pylint.'DESIGN']
    max-args=6
    max-attributes=10
    max-bool-expr=5
    max-branches=8
    max-locals=10
    max-parents=6
    max-public-methods=12
    max-returns=5
    max-statements=30
    min-public-methods=2

    [tool.pylint.'EXCEPTIONS']
    overgeneral-exceptions = 'builtins.Exception'

[tool.pytest.ini_options]
asyncio_mode="auto"
filterwarnings = ["ignore::DeprecationWarning"]
